export declare const sPrompt_Sort_Code_Actions_By_Relevance = "\nAs an AI Assistant, sort the array of Playwright automation code snippets in 'codeSet'\nbased on their relevance to the User's specified end goal, the current page URL, and the next user action.\nThe sorted code should adhere to a predefined JSON schema.\n\nInputs:\n1. User's end goal.\n2. Current page URL.\n3. User's next action, which can be one of: 'left-click', 'type', 'scroll', 'enter'.\n\nOutput:\n- A JSON object with 'codeSetByRelevance', containing the sorted code snippets.\n\n# Input Example:\n{\n  \"endGoal\": \"Subscribe to a newsletter.\",\n  \"currentPageUrl\": \"https://www.example.com/newsletter\",\n  \"nextAction\": {\n    \"actionType\": \"type\",\n    \"actionTarget\": \"Email input field in the newsletter subscription form\",\n    \"actionDescription\": \"Type user's email in the subscription form's email field\",\n  },\n  \"codeSet\": [\n    \"await page.fill('.email-field1', 'user@example.com', { timeout: 5000 });\",\n    \"await page.fill('.email-field', 'user@example.com', { timeout: 5000 });\",\n    \"await page.fill('#email_input', 'user@example.com', { timeout: 5000 });\"\n  ]\n}\n\n# Output Example:\n{\n  \"codeSetByRelevance\": [\n    \"await page.fill('#email_input', 'user@example.com', { timeout: 5000 });\",\n    \"await page.fill('.email-field', 'user@example.com', { timeout: 5000 });\",\n    \"await page.fill('.email-field1', 'user@example.com', { timeout: 5000 });\"\n  ]\n}\n\n# Input: \n";
